#!/usr/bin/env python3
"""
CyberKitty - –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è TDLib —Å–µ—Å—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ Pyrogram
–°–æ–∑–¥–∞–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—É—é —Å–µ—Å—Å–∏—é –¥–ª—è Bot API Server –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Ñ–∞–π–ª–æ–≤ >50 –ú–ë
"""

import os
import sys
import asyncio
from pyrogram import Client
from pyrogram.errors import SessionPasswordNeeded

# API –¥–∞–Ω–Ω—ã–µ
API_ID = 29612572
API_HASH = "fa4d9922f76dea00803d072510ced924"

# –ü—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏
SESSION_NAME = "user_session"
SESSION_DIR = "/home/cyberkitty/Project/transkribator/telegram-bot-api-data-new"

async def create_user_session():
    """
    –°–æ–∑–¥–∞–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—É—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫—É—é —Å–µ—Å—Å–∏—é –¥–ª—è Bot API Server
    """
    
    print("üîê CyberKitty - –°–æ–∑–¥–∞–Ω–∏–µ TDLib —Å–µ—Å—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (Pyrogram)")
    print("=" * 60)
    print("üì± –≠—Ç–æ—Ç –ø—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞—Å—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—É—é —Å–µ—Å—Å–∏—é –û–î–ò–ù –†–ê–ó")
    print("üéØ –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è Bot API Server —Å–º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Ñ–∞–π–ª–∞–º–∏ >50 –ú–ë")
    print("üõ°Ô∏è Pyrogram –±–µ–∑–æ–ø–∞—Å–Ω–µ–µ Telethon - –º–µ–Ω—å—à–µ —Ä–∏—Å–∫ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    os.makedirs(SESSION_DIR, exist_ok=True)
    
    # –ü–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —Å–µ—Å—Å–∏–∏
    session_path = os.path.join(SESSION_DIR, SESSION_NAME)
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç Pyrogram
    app = Client(
        session_path,
        api_id=API_ID,
        api_hash=API_HASH,
        workdir=SESSION_DIR
    )
    
    try:
        print("üîå –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Telegram —á–µ—Ä–µ–∑ Pyrogram...")
        await app.start()
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        me = await app.get_me()
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω!")
        print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {me.first_name} {me.last_name or ''}")
        print(f"üì± Username: @{me.username or '–±–µ–∑ username'}")
        print(f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {me.phone_number}")
        print(f"üÜî ID: {me.id}")
        
        print(f"üíæ –°–µ—Å—Å–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤: {session_path}.session")
        print("üéâ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å Bot API Server —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False
        
    finally:
        await app.stop()

def main():
    """
    –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
    """
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ pyrogram
        import pyrogram
        print(f"üì¶ Pyrogram –≤–µ—Ä—Å–∏—è: {pyrogram.__version__}")
    except ImportError:
        print("‚ùå Pyrogram –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        print("üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install pyrogram")
        return False
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏
    success = asyncio.run(create_user_session())
    
    if success:
        print("\n" + "=" * 60)
        print("üöÄ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:")
        print("1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ Bot API Server —Å —Å–æ–∑–¥–∞–Ω–Ω–æ–π —Å–µ—Å—Å–∏–µ–π")
        print("2. –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π database_directory –≤ docker run")
        print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É —Å —Ñ–∞–π–ª–∞–º–∏ >50 –ú–ë")
        print("=" * 60)
        print("\nüí° –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Bot API Server:")
        print("docker run -d --name telegram-bot-api \\")
        print("  -p 8083:8081 \\")
        print(f"  -v {SESSION_DIR}:/var/lib/telegram-bot-api \\")
        print("  -e TELEGRAM_API_ID=29612572 \\")
        print("  -e TELEGRAM_API_HASH=fa4d9922f76dea00803d072510ced924 \\")
        print("  aiogram/telegram-bot-api:latest \\")
        print("  --local --dir=/var/lib/telegram-bot-api")
    
    return success

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1) 