#!/usr/bin/env python3

from telegram import Update
from telegram.ext import (
    Application, ApplicationBuilder, CommandHandler, MessageHandler, 
    CallbackQueryHandler, ContextTypes, filters, PreCheckoutQueryHandler,
    ConversationHandler, ChatJoinRequestHandler
)

import os

from transkribator_modules.config import logger, BOT_TOKEN, TELEGRAM_API_URL
from transkribator_modules.bot.commands import (
    start_command
)
from transkribator_modules.bot.handlers import (
    button_callback, handle_message, handle_chat_join_request, handle_my_chat_member
)
from transkribator_modules.bot.callbacks import handle_callback_query
from transkribator_modules.bot.payments import (
    handle_pre_checkout_query, handle_successful_payment, show_payment_plans,
    handle_payment_callback, ask_contact_or_email_wrapper, handle_contact, handle_email,
    ASK_CONTACT, ASK_EMAIL
)
from transkribator_modules.db.database import init_database

def main() -> None:
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞."""
    logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    try:
        init_database()
        logger.info("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
    builder = ApplicationBuilder().token(BOT_TOKEN).read_timeout(300).connect_timeout(300)
    
    # –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω –ª–æ–∫–∞–ª—å–Ω—ã–π API URL, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
    if TELEGRAM_API_URL:
        builder = builder.base_url(TELEGRAM_API_URL)
        logger.info(f"üöÄ –ò—Å–ø–æ–ª—å–∑—É—é –ª–æ–∫–∞–ª—å–Ω—ã–π Telegram Bot API: {TELEGRAM_API_URL}")
    else:
        logger.info("üöÄ –ò—Å–ø–æ–ª—å–∑—É—é –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π Telegram Bot API")

    application = builder.build()

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start_command))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø–ª–∞—Ç–µ–∂–µ–π
    application.add_handler(PreCheckoutQueryHandler(handle_pre_checkout_query))
    application.add_handler(MessageHandler(filters.SUCCESSFUL_PAYMENT, handle_successful_payment))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∫–æ–Ω—Ç–∞–∫—Ç–∞/email –ø–µ—Ä–µ–¥ –æ–ø–ª–∞—Ç–æ–π –ÆKassa
    # –í–†–ï–ú–ï–ù–ù–û –û–¢–ö–õ–Æ–ß–ï–ù–û –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    # conv_handler = ConversationHandler(
    #     entry_points=[CallbackQueryHandler(ask_contact_or_email_wrapper, pattern=r'^pay_yukassa_')],
    #     states={
    #         ASK_CONTACT: [MessageHandler(filters.CONTACT, handle_contact)],
    #         ASK_EMAIL: [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_email)]
    #     },
    #     fallbacks=[CallbackQueryHandler(handle_payment_callback)]
    # )
    # application.add_handler(conv_handler)
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ ¬´—Ç—è–∂—ë–ª—ã—Ö¬ª —Å–æ–æ–±—â–µ–Ω–∏–π (–≤–∏–¥–µ–æ/–∞—É–¥–∏–æ) –ø–µ—Ä–µ–Ω–µ—Å—ë–Ω –≤ –æ—Ç–¥–µ–ª—å–Ω—É—é –≥—Ä—É–ø–ø—É, 
    # —á—Ç–æ–±—ã –∫–æ–º–∞–Ω–¥—ã –≤—Ä–æ–¥–µ /start –æ—Ç–≤–µ—á–∞–ª–∏ –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ –∏ –Ω–µ —Å—Ç–æ—è–ª–∏ –≤ –æ—á–µ—Ä–µ–¥–∏
    application.add_handler(MessageHandler(filters.ALL & ~filters.COMMAND, handle_message), group=1)
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–æ–≤
    application.add_handler(ChatJoinRequestHandler(handle_chat_join_request))
    # application.add_handler(MessageHandler(filters.StatusUpdate.MY_CHAT_MEMBER, handle_my_chat_member))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫
    application.add_handler(CallbackQueryHandler(handle_callback_query))  # –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
    application.add_handler(CallbackQueryHandler(button_callback))  # –†–µ–∑–µ—Ä–≤–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Å–ª—É—à–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è...")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç
    application.run_polling(allowed_updates=Update.ALL_TYPES, drop_pending_updates=True)

if __name__ == '__main__':
    main() 