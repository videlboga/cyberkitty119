from sqlalchemy import Column, Integer, BigInteger, String, Float, DateTime, Boolean, ForeignKey, Text
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import relationship
from datetime import datetime, timedelta
from enum import Enum

Base = declarative_base()

class PlanType(str, Enum):
    FREE = "free"
    BASIC = "basic"
    PRO = "pro"
    UNLIMITED = "unlimited"

class User(Base):
    __tablename__ = "users"

    id = Column(Integer, primary_key=True, index=True)
    telegram_id = Column(BigInteger, unique=True, index=True, nullable=False)
    username = Column(String, nullable=True)
    first_name = Column(String, nullable=True)
    last_name = Column(String, nullable=True)

    # –¢–µ–∫—É—â–∏–π –ø–ª–∞–Ω
    current_plan = Column(String, default=PlanType.FREE)
    plan_expires_at = Column(DateTime, nullable=True)

    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    total_minutes_transcribed = Column(Float, default=0.0)
    minutes_used_this_month = Column(Float, default=0.0)
    last_reset_date = Column(DateTime, default=datetime.utcnow)

    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–π (–¥–ª—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞)
    total_generations = Column(Integer, default=0)
    generations_used_this_month = Column(Integer, default=0)

    # –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
    created_at = Column(DateTime, default=datetime.utcnow)
    updated_at = Column(DateTime, default=datetime.utcnow, onupdate=datetime.utcnow)
    is_active = Column(Boolean, default=True)

    # –°–≤—è–∑–∏
    transactions = relationship("Transaction", back_populates="user")
    transcriptions = relationship("Transcription", back_populates="user")

class Plan(Base):
    __tablename__ = "plans"

    id = Column(Integer, primary_key=True, index=True)
    name = Column(String, unique=True, nullable=False)  # free, basic, pro, unlimited
    display_name = Column(String, nullable=False)

    # –õ–∏–º–∏—Ç—ã
    minutes_per_month = Column(Float, nullable=True)  # None –¥–ª—è –±–µ–∑–ª–∏–º–∏—Ç–Ω–æ–≥–æ
    max_file_size_mb = Column(Float, default=100.0)

    # –¶–µ–Ω—ã
    price_rub = Column(Float, default=0.0)
    price_usd = Column(Float, default=0.0)
    price_stars = Column(Integer, default=0)

    # –û–ø–∏—Å–∞–Ω–∏–µ –∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏
    description = Column(Text, nullable=True)
    features = Column(Text, nullable=True)  # JSON —Å—Ç—Ä–æ–∫–∞ —Å –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—è–º–∏

    # –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
    is_active = Column(Boolean, default=True)
    created_at = Column(DateTime, default=datetime.utcnow)

class Transaction(Base):
    __tablename__ = "transactions"

    id = Column(Integer, primary_key=True, index=True)
    user_id = Column(Integer, ForeignKey("users.id"), nullable=False)

    # –î–∞–Ω–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ (—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –ë–î)
    plan_type = Column(String, nullable=False)  # –ù–∞–∑–≤–∞–Ω–∏–µ –∫—É–ø–ª–µ–Ω–Ω–æ–≥–æ –ø–ª–∞–Ω–∞

    # –°—É–º–º—ã –≤ —Ä–∞–∑–Ω—ã—Ö –≤–∞–ª—é—Ç–∞—Ö
    amount_rub = Column(Float, nullable=True)
    amount_usd = Column(Float, nullable=True)
    amount_stars = Column(Integer, nullable=True)  # Telegram Stars
    currency = Column(String, nullable=True)

    # –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã –ø–ª–∞—Ç–µ–∂–µ–π
    provider_payment_charge_id = Column(String, nullable=True)
    telegram_payment_charge_id = Column(String, nullable=True)
    external_payment_id = Column(String, nullable=True)

    # –°—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã
    status = Column(String, default="pending")  # pending, completed, failed, refunded
    payment_method = Column(String, nullable=True)  # telegram_stars, stripe, yookassa, etc.

    # –í—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–∫–∏
    created_at = Column(DateTime, default=datetime.utcnow)

    # –°–≤—è–∑–∏
    user = relationship("User", back_populates="transactions")

class Transcription(Base):
    __tablename__ = "transcriptions"

    id = Column(Integer, primary_key=True, index=True)
    user_id = Column(Integer, ForeignKey("users.id"), nullable=False)

    # –î–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª–∞
    filename = Column(String, nullable=True)
    file_size_mb = Column(Float, nullable=False)
    audio_duration_minutes = Column(Float, nullable=False)

    # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
    raw_transcript = Column(Text, nullable=True)
    formatted_transcript = Column(Text, nullable=True)
    transcript_length = Column(Integer, default=0)

    # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã
    transcription_service = Column(String, default="deepinfra")
    formatting_service = Column(String, nullable=True)

    # –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
    created_at = Column(DateTime, default=datetime.utcnow)
    processing_time_seconds = Column(Float, nullable=True)

    # –°–≤—è–∑–∏
    user = relationship("User", back_populates="transcriptions")

class ApiKey(Base):
    __tablename__ = "api_keys"

    id = Column(Integer, primary_key=True, index=True)
    user_id = Column(Integer, ForeignKey("users.id"), nullable=False)

    # –î–∞–Ω–Ω—ã–µ –∫–ª—é—á–∞
    key_hash = Column(String, unique=True, nullable=False)  # –•–µ—à –∫–ª—é—á–∞
    name = Column(String, nullable=True)  # –ù–∞–∑–≤–∞–Ω–∏–µ –∫–ª—é—á–∞

    # –õ–∏–º–∏—Ç—ã –¥–ª—è API –∫–ª—é—á–∞
    minutes_limit = Column(Float, nullable=True)  # –õ–∏–º–∏—Ç –º–∏–Ω—É—Ç –¥–ª—è —ç—Ç–æ–≥–æ –∫–ª—é—á–∞
    minutes_used = Column(Float, default=0.0)

    # –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
    is_active = Column(Boolean, default=True)
    created_at = Column(DateTime, default=datetime.utcnow)
    last_used_at = Column(DateTime, nullable=True)
    expires_at = Column(DateTime, nullable=True)

    # –°–≤—è–∑–∏
    user = relationship("User")

class PromoCode(Base):
    __tablename__ = "promo_codes"

    id = Column(Integer, primary_key=True, index=True)
    code = Column(String, unique=True, nullable=False, index=True)  # –°–∞–º –ø—Ä–æ–º–æ–∫–æ–¥

    # –ß—Ç–æ –¥–∞–µ—Ç –ø—Ä–æ–º–æ–∫–æ–¥
    plan_type = Column(String, nullable=False)  # unlimited
    duration_days = Column(Integer, nullable=True)  # None –¥–ª—è –±–µ—Å—Å—Ä–æ—á–Ω–æ–≥–æ

    # –õ–∏–º–∏—Ç—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    max_uses = Column(Integer, default=1)  # –°–∫–æ–ª—å–∫–æ —Ä–∞–∑ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
    current_uses = Column(Integer, default=0)  # –°–∫–æ–ª—å–∫–æ —Ä–∞–∑ —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏

    # –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
    description = Column(String, nullable=True)  # –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞
    bonus_type = Column(String, nullable=True)
    bonus_value = Column(String, nullable=True)
    is_active = Column(Boolean, default=True)
    created_at = Column(DateTime, default=datetime.utcnow)
    expires_at = Column(DateTime, nullable=True)  # –ö–æ–≥–¥–∞ –ø—Ä–æ–º–æ–∫–æ–¥ –∏—Å—Ç–µ–∫–∞–µ—Ç

    # –°–≤—è–∑–∏ —Å –∞–∫—Ç–∏–≤–∞—Ü–∏—è–º–∏
    activations = relationship("PromoActivation", back_populates="promo_code")

class PromoActivation(Base):
    __tablename__ = "promo_activations"

    id = Column(Integer, primary_key=True, index=True)
    user_id = Column(Integer, ForeignKey("users.id"), nullable=False)
    promo_code_id = Column(Integer, ForeignKey("promo_codes.id"), nullable=False)

    # –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
    activated_at = Column(DateTime, default=datetime.utcnow)
    expires_at = Column(DateTime, nullable=True)  # –ö–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è –¥–µ–π—Å—Ç–≤–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞

    # –°–≤—è–∑–∏
    user = relationship("User")
    promo_code = relationship("PromoCode", back_populates="activations")


class ReferralLink(Base):
    __tablename__ = "referral_links"

    id = Column(Integer, primary_key=True, index=True)
    user_telegram_id = Column(BigInteger, nullable=False, index=True)
    code = Column(String, unique=True, nullable=False, index=True)
    created_at = Column(DateTime, default=datetime.utcnow)


class ReferralVisit(Base):
    __tablename__ = "referral_visits"

    id = Column(Integer, primary_key=True, index=True)
    referral_code = Column(String, nullable=False, index=True)
    visitor_telegram_id = Column(BigInteger, nullable=True, index=True)
    created_at = Column(DateTime, default=datetime.utcnow)


class ReferralAttribution(Base):
    __tablename__ = "referral_attribution"

    id = Column(Integer, primary_key=True, index=True)
    visitor_telegram_id = Column(BigInteger, unique=True, nullable=False, index=True)
    referral_code = Column(String, nullable=False, index=True)
    created_at = Column(DateTime, default=datetime.utcnow)


class ReferralPayment(Base):
    __tablename__ = "referral_payments"

    id = Column(Integer, primary_key=True, index=True)
    referral_code = Column(String, nullable=False, index=True)
    payer_telegram_id = Column(BigInteger, nullable=False, index=True)
    amount_rub = Column(Float, nullable=False)
    created_at = Column(DateTime, default=datetime.utcnow)

# –ü—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ø–ª–∞–Ω—ã (–æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è)
DEFAULT_PLANS = [
    {
        "name": PlanType.FREE,
        "display_name": "üÜì –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π",
        "minutes_per_month": None,  # –î–ª—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞ —Å—á–∏—Ç–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏, –∞ –Ω–µ –º–∏–Ω—É—Ç—ã
        "max_file_size_mb": 50.0,
        "price_rub": 0.0,
        "price_usd": 0.0,
        "price_stars": 0,
        "description": "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞—à —Å–µ—Ä–≤–∏—Å –±–µ—Å–ø–ª–∞—Ç–Ω–æ",
        "features": '["3 –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤ –º–µ—Å—è—Ü", "–§–∞–π–ª—ã –¥–æ 50 –ú–ë", "–ë–∞–∑–æ–≤–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ"]'
    },
    {
        "name": PlanType.BASIC,
        "display_name": "‚≠ê –ë–∞–∑–æ–≤—ã–π",
        "minutes_per_month": 180.0,  # 3 —á–∞—Å–∞
        "max_file_size_mb": 200.0,
        "price_rub": 0.0,
        "price_usd": 0.0,
        "price_stars": 0,
        "description": "–ü–ª–∞–Ω —É—Å—Ç–∞—Ä–µ–ª",
        "features": '["–ü–ª–∞–Ω –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"]',
        "is_active": False
    },
    {
        "name": PlanType.PRO,
        "display_name": "üíé –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π",
        "minutes_per_month": 600.0,  # 10 —á–∞—Å–æ–≤
        "max_file_size_mb": 500.0,
        "price_rub": 299.0,
        "price_usd": 0.0,
        "price_stars": 230,
        "description": "–î–ª—è –±–∏–∑–Ω–µ—Å–∞ –∏ —Ä–∞–±–æ—Ç—ã",
        "features": '["10 —á–∞—Å–æ–≤ –≤ –º–µ—Å—è—Ü", "–§–∞–π–ª—ã –¥–æ 500 –ú–ë", "API –¥–æ—Å—Ç—É–ø", "–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç"]'
    },
    {
        "name": PlanType.UNLIMITED,
        "display_name": "üöÄ –ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π",
        "minutes_per_month": None,  # –ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π
        "max_file_size_mb": 2000.0,
        "price_rub": 699.0,
        "price_usd": 0.0,
        "price_stars": 538,
        "description": "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏",
        "features": '["–ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–µ –º–∏–Ω—É—Ç—ã", "–§–∞–π–ª—ã –¥–æ 2 –ì–ë", "VIP –ø–æ–¥–¥–µ—Ä–∂–∫–∞", "–í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏"]'
    }
]
