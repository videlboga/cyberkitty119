#!/usr/bin/env python3

import os
import sys
import asyncio
import logging
from pathlib import Path
from dotenv import load_dotenv
from pyrogram import Client

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ü–æ–ª—É—á–∞–µ–º —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ API –∏–∑ .env
API_ID = int(os.getenv('TELEGRAM_API_ID', '0'))
API_HASH = os.getenv('TELEGRAM_API_HASH', '')
SESSION_NAME = 'pyro_worker'

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.StreamHandler()
    ]
)
logger = logging.getLogger(__name__)

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Pyrogram –∫–ª–∏–µ–Ω—Ç–∞."""
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è Pyrogram...")
    
    if not API_ID or API_ID == 0 or not API_HASH:
        logger.error("‚ùå API_ID –∏–ª–∏ API_HASH –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ .env —Ñ–∞–π–ª–µ!")
        logger.info("‚ÑπÔ∏è –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤ —Ñ–∞–π–ª–µ .env –µ—Å—Ç—å —Å—Ç—Ä–æ–∫–∏:")
        logger.info("TELEGRAM_API_ID=your_api_id")
        logger.info("TELEGRAM_API_HASH=your_api_hash")
        sys.exit(1)
    
    # –°–æ–∑–¥–∞–µ–º Pyrogram –∫–ª–∏–µ–Ω—Ç
    app = Client(SESSION_NAME, api_id=API_ID, api_hash=API_HASH)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    async with app:
        me = await app.get_me()
        logger.info(f"‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞! –í—ã –≤–æ—à–ª–∏ –∫–∞–∫ {me.first_name} {me.last_name or ''} (@{me.username or '–±–µ–∑ —é–∑–µ—Ä–Ω–µ–π–º–∞'})")
        logger.info(f"‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {me.phone_number}")
        logger.info(f"üÜî ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {me.id}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ñ–∞–π–ª —Å–µ—Å—Å–∏–∏
        session_file = Path(f"{SESSION_NAME}.session")
        if session_file.exists():
            logger.info(f"üìÅ –§–∞–π–ª —Å–µ—Å—Å–∏–∏ —Å–æ–∑–¥–∞–Ω: {session_file.absolute()}")
            logger.info("‚ÑπÔ∏è –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å pyro_worker.py")
        else:
            logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ñ–∞–π–ª —Å–µ—Å—Å–∏–∏: {session_file.absolute()}")

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        logger.info("üëã –ü—Ä–æ—Ü–µ—Å—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø—Ä–µ—Ä–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")
    except Exception as e:
        logger.error(f"üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {e}")
        sys.exit(1) 