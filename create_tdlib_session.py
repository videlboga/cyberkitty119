#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è TDLib —Å–µ—Å—Å–∏–∏ –¥–ª—è Telegram Bot API Server
–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Å–æ–∑–¥–∞–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é —Å–µ—Å—Å–∏—é –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–æ–ª—å—à–∏–º–∏ —Ñ–∞–π–ª–∞–º–∏ —á–µ—Ä–µ–∑ –ª–æ–∫–∞–ª—å–Ω—ã–π Bot API Server
"""

import os
import asyncio
import json
from pyrogram import Client

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
from dotenv import load_dotenv
load_dotenv()

# –ü–æ–ª—É—á–∞–µ–º API –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
api_id = os.getenv('TELEGRAM_API_ID')
api_hash = os.getenv('TELEGRAM_API_HASH')
phone_number = os.getenv('PHONE_NUMBER')

if not api_id or not api_hash:
    print("‚ùå –û—à–∏–±–∫–∞: TELEGRAM_API_ID –∏ TELEGRAM_API_HASH –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ .env —Ñ–∞–π–ª–µ")
    exit(1)

if not phone_number:
    print("‚ùå –û—à–∏–±–∫–∞: PHONE_NUMBER –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
    exit(1)

async def create_session():
    """–°–æ–∑–¥–∞–µ—Ç —Å–µ—Å—Å–∏—é TDLib –¥–ª—è Bot API Server"""
    
    print("üîê –°–æ–∑–¥–∞–Ω–∏–µ TDLib —Å–µ—Å—Å–∏–∏ –¥–ª—è Bot API Server...")
    print(f"üì± –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {phone_number}")
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç Pyrogram
    client = Client(
        "telegram_bot_api_session",
        api_id=int(api_id),
        api_hash=api_hash,
        phone_number=phone_number,
        workdir="./telegram-bot-api-data"  # –ü–∞–ø–∫–∞ –¥–ª—è —Å–µ—Å—Å–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    )
    
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∏ –∞–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è
        await client.start()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
        me = await client.get_me()
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∫–∞–∫: {me.first_name} (@{me.username})")
        print(f"üÜî User ID: {me.id}")
        
        # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è Bot API Server
        config = {
            'session_file': 'telegram_bot_api_session.session',
            'api_id': int(api_id),
            'api_hash': api_hash,
            'phone': phone_number,
            'user_id': me.id,
            'username': me.username,
            'first_name': me.first_name,
            'workdir': './telegram-bot-api-data'
        }
        
        # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        os.makedirs('./telegram-bot-api-data', exist_ok=True)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        with open('./telegram-bot-api-data/bot_api_config.json', 'w', encoding='utf-8') as f:
            json.dump(config, f, indent=2, ensure_ascii=False)
        
        print("‚úÖ –°–µ—Å—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print("üìÅ –§–∞–π–ª—ã —Å–µ—Å—Å–∏–∏:")
        print(f"   - ./telegram-bot-api-data/telegram_bot_api_session.session")
        print(f"   - ./telegram-bot-api-data/bot_api_config.json")
        print("")
        print("üöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å Bot API Server —Å —ç—Ç–æ–π —Å–µ—Å—Å–∏–µ–π")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–µ—Å—Å–∏–∏: {e}")
        return False
    
    finally:
        await client.stop()
    
    return True

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("=" * 60)
    print("ü§ñ CyberKitty Transkribator - TDLib Session Creator")
    print("=" * 60)
    
    success = await create_session()
    
    if success:
        print("")
        print("üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Bot API Server –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä")
        print("2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–∞–ø–∫–∞ telegram-bot-api-data –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∞ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä")
        print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É —Å –±–æ–ª—å—à–∏–º–∏ —Ñ–∞–π–ª–∞–º–∏")
        print("")
        print("üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: —Å–µ—Å—Å–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ ./telegram-bot-api-data/")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å–µ—Å—Å–∏—é")

if __name__ == "__main__":
    asyncio.run(main()) 