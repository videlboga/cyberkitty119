#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è API –∫–ª—é—á–∞ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –±–æ—Ç–∞
"""

import sys
import os
from pathlib import Path
import uuid

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
current_dir = Path(__file__).parent.resolve()
sys.path.append(str(current_dir))

try:
    from transkribator_modules.db.database import get_db, UserService, ApiKeyService
    from transkribator_modules.db.models import User, ApiKey
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    sys.exit(1)

def create_api_key_for_local_bot():
    """–°–æ–∑–¥–∞—Ç—å API –∫–ª—é—á –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –±–æ—Ç–∞"""
    
    db = next(get_db())
    user_service = UserService(db)
    api_key_service = ApiKeyService(db)
    
    # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –±–æ—Ç–∞, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    local_bot_user = db.query(User).filter(User.telegram_id == 999999999).first()
    
    if not local_bot_user:
        print("–°–æ–∑–¥–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –±–æ—Ç–∞...")
        local_bot_user = user_service.create_user(
            telegram_id=999999999,
            username="local_bot",
            first_name="Local Bot",
            last_name="CyberKitty"
        )
        print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: ID {local_bot_user.id}")
    
    # –°–æ–∑–¥–∞–µ–º API –∫–ª—é—á
    api_key_name = "local_bot_key"
    existing_key = db.query(ApiKey).filter(ApiKey.name == api_key_name).first()
    
    if existing_key:
        print(f"API –∫–ª—é—á —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {existing_key.key}")
        return existing_key.key
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –∫–ª—é—á
    api_key_value = f"local_bot_{uuid.uuid4().hex[:16]}"
    
    api_key = api_key_service.create_api_key(
        user=local_bot_user,
        name=api_key_name,
        key=api_key_value,
        minutes_limit=None  # –ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π
    )
    
    print(f"‚úÖ API –∫–ª—é—á —Å–æ–∑–¥–∞–Ω: {api_key_value}")
    print(f"–ò–º—è: {api_key.name}")
    print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {local_bot_user.telegram_id}")
    
    return api_key_value

if __name__ == "__main__":
    try:
        key = create_api_key_for_local_bot()
        print(f"\nüîë –î–æ–±–∞–≤—å—Ç–µ –≤ .env —Ñ–∞–π–ª:")
        print(f"LOCAL_API_KEY={key}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        sys.exit(1) 