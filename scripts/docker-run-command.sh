#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥ –≤ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞—Ö

set -e

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã
if [ $# -lt 2 ]; then
    echo "üê≥ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥ –≤ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞—Ö"
    echo "========================================="
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä> <–∫–æ–º–∞–Ω–¥–∞>"
    echo ""
    echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:"
    echo "  bot     - cyberkitty19-transkribator-bot"
    echo "  pyro    - cyberkitty19-transkribator-pyro-worker" 
    echo "  api     - cyberkitty19-transkribator-api"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 bot python -c 'print(\"Hello\")'"
    echo "  $0 pyro ls -la"
    echo "  $0 api pip list"
    exit 1
fi

CONTAINER_TYPE="$1"
shift
COMMAND="$*"

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–º—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
case "$CONTAINER_TYPE" in
    "bot")
        CONTAINER="cyberkitty19-transkribator-bot"
        ;;
    "pyro"|"worker")
        CONTAINER="cyberkitty19-transkribator-pyro-worker"
        ;;
    "api")
        CONTAINER="cyberkitty19-transkribator-api"
        ;;
    *)
        echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞: $CONTAINER_TYPE"
        exit 1
        ;;
esac

echo "ÔøΩÔøΩ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ: $CONTAINER"
echo "üìù –ö–æ–º–∞–Ω–¥–∞: $COMMAND"
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω –ª–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
if docker ps | grep -q "$CONTAINER"; then
    # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω, –≤—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É
    docker exec -it "$CONTAINER" $COMMAND
else
    # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º docker-compose run
    echo "‚ö†Ô∏è  –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä..."
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–µ—Ä–≤–∏—Å –¥–ª—è docker-compose
    case "$CONTAINER_TYPE" in
        "bot")
            SERVICE="bot"
            ;;
        "pyro"|"worker")
            SERVICE="pyro-worker"
            ;;
        "api")
            SERVICE="api"
            ;;
    esac
    
    docker-compose run --rm "$SERVICE" $COMMAND
fi 