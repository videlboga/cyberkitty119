#!/bin/bash

# üè• –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è Cyberkitty19 Transkribator
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./health-check.sh [--verbose] [--telegram]

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# –§–ª–∞–≥–∏
VERBOSE=false
TELEGRAM_NOTIFY=false

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
while [[ $# -gt 0 ]]; do
    case $1 in
        --verbose|-v)
            VERBOSE=true
            shift
            ;;
        --telegram|-t)
            TELEGRAM_NOTIFY=true
            shift
            ;;
        *)
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [--verbose] [--telegram]"
            exit 1
            ;;
    esac
done

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞
log() {
    echo -e "${GREEN}[‚úì]${NC} $1"
}

warn() {
    echo -e "${YELLOW}[‚ö†]${NC} $1"
}

error() {
    echo -e "${RED}[‚úó]${NC} $1"
}

info() {
    echo -e "${BLUE}[‚Ñπ]${NC} $1"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ Telegram (–µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ)
send_telegram_alert() {
    if [[ "$TELEGRAM_NOTIFY" == "true" && -f .env ]]; then
        source .env
        if [[ -n "$HEALTH_CHECK_CHAT_ID" && -n "$TELEGRAM_BOT_TOKEN" ]]; then
            curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
                -d chat_id="$HEALTH_CHECK_CHAT_ID" \
                -d text="üö® Cyberkitty19 Transkribator Alert: $1" \
                -d parse_mode="HTML" > /dev/null
        fi
    fi
}

# –ù–∞—á–∞–ª–æ –ø—Ä–æ–≤–µ—Ä–∫–∏
echo "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è Cyberkitty19 Transkribator"
echo "=============================================="
echo "–í—Ä–µ–º—è: $(date)"
echo ""

ISSUES=0

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
info "–ü—Ä–æ–≤–µ—Ä–∫–∞ Docker..."
if command -v docker &> /dev/null; then
    if docker info &> /dev/null; then
        log "Docker —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        error "Docker –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
        ISSUES=$((ISSUES + 1))
    fi
else
    error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    ISSUES=$((ISSUES + 1))
fi

# 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Compose
info "–ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Compose..."
if command -v docker-compose &> /dev/null; then
    log "Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
else
    error "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    ISSUES=$((ISSUES + 1))
fi

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
if docker-compose ps &> /dev/null; then
    RUNNING_CONTAINERS=$(docker-compose ps --services --filter "status=running" | wc -l)
    TOTAL_CONTAINERS=$(docker-compose ps --services | wc -l)
    
    if [[ $RUNNING_CONTAINERS -eq $TOTAL_CONTAINERS ]]; then
        log "–í—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã ($RUNNING_CONTAINERS/$TOTAL_CONTAINERS)"
    else
        warn "–ù–µ –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã ($RUNNING_CONTAINERS/$TOTAL_CONTAINERS)"
        ISSUES=$((ISSUES + 1))
        
        if [[ "$VERBOSE" == "true" ]]; then
            echo "–°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
            docker-compose ps
        fi
    fi
else
    error "–ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
    ISSUES=$((ISSUES + 1))
fi

# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ API —Å–µ—Ä–≤–µ—Ä–∞
info "–ü—Ä–æ–≤–µ—Ä–∫–∞ API —Å–µ—Ä–≤–µ—Ä–∞..."
if curl -f -s http://localhost:8000/health &> /dev/null; then
    log "API —Å–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç"
else
    warn "API —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    ISSUES=$((ISSUES + 1))
fi

# 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∏—Å–∫–∞
info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∏—Å–∫–∞..."
DISK_USAGE=$(df . | tail -1 | awk '{print $5}' | sed 's/%//')
if [[ $DISK_USAGE -lt 80 ]]; then
    log "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞: ${DISK_USAGE}%"
elif [[ $DISK_USAGE -lt 90 ]]; then
    warn "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞: ${DISK_USAGE}% (–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ)"
    ISSUES=$((ISSUES + 1))
else
    error "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞: ${DISK_USAGE}% (–∫—Ä–∏—Ç–∏—á–Ω–æ!)"
    ISSUES=$((ISSUES + 1))
    send_telegram_alert "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞: ${DISK_USAGE}%"
fi

# 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–∞–º—è—Ç–∏
info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–∞–º—è—Ç–∏..."
if command -v free &> /dev/null; then
    MEMORY_USAGE=$(free | grep Mem | awk '{printf "%.0f", $3/$2 * 100.0}')
    if [[ $MEMORY_USAGE -lt 80 ]]; then
        log "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏: ${MEMORY_USAGE}%"
    elif [[ $MEMORY_USAGE -lt 90 ]]; then
        warn "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏: ${MEMORY_USAGE}% (–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ)"
        ISSUES=$((ISSUES + 1))
    else
        error "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏: ${MEMORY_USAGE}% (–∫—Ä–∏—Ç–∏—á–Ω–æ!)"
        ISSUES=$((ISSUES + 1))
        send_telegram_alert "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏: ${MEMORY_USAGE}%"
    fi
fi

# 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ –ª–æ–≥–æ–≤
info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ –ª–æ–≥–æ–≤..."
if [[ -d logs ]]; then
    LOG_SIZE=$(du -sm logs 2>/dev/null | cut -f1)
    if [[ $LOG_SIZE -lt 100 ]]; then
        log "–†–∞–∑–º–µ—Ä –ª–æ–≥–æ–≤: ${LOG_SIZE}MB"
    elif [[ $LOG_SIZE -lt 500 ]]; then
        warn "–†–∞–∑–º–µ—Ä –ª–æ–≥–æ–≤: ${LOG_SIZE}MB (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ—á–∏—Å—Ç–∫–∞)"
    else
        warn "–†–∞–∑–º–µ—Ä –ª–æ–≥–æ–≤: ${LOG_SIZE}MB (—Ç—Ä–µ–±—É–µ—Ç—Å—è –æ—á–∏—Å—Ç–∫–∞!)"
        ISSUES=$((ISSUES + 1))
    fi
fi

# 8. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ –º–µ–¥–∏–∞ —Ñ–∞–π–ª–æ–≤
info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ –º–µ–¥–∏–∞ —Ñ–∞–π–ª–æ–≤..."
MEDIA_DIRS=("videos" "audio" "transcriptions")
TOTAL_MEDIA_SIZE=0

for dir in "${MEDIA_DIRS[@]}"; do
    if [[ -d "$dir" ]]; then
        DIR_SIZE=$(du -sm "$dir" 2>/dev/null | cut -f1)
        TOTAL_MEDIA_SIZE=$((TOTAL_MEDIA_SIZE + DIR_SIZE))
        
        if [[ "$VERBOSE" == "true" ]]; then
            echo "  $dir: ${DIR_SIZE}MB"
        fi
    fi
done

if [[ $TOTAL_MEDIA_SIZE -lt 1000 ]]; then
    log "–†–∞–∑–º–µ—Ä –º–µ–¥–∏–∞ —Ñ–∞–π–ª–æ–≤: ${TOTAL_MEDIA_SIZE}MB"
elif [[ $TOTAL_MEDIA_SIZE -lt 5000 ]]; then
    warn "–†–∞–∑–º–µ—Ä –º–µ–¥–∏–∞ —Ñ–∞–π–ª–æ–≤: ${TOTAL_MEDIA_SIZE}MB (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ—á–∏—Å—Ç–∫–∞)"
else
    warn "–†–∞–∑–º–µ—Ä –º–µ–¥–∏–∞ —Ñ–∞–π–ª–æ–≤: ${TOTAL_MEDIA_SIZE}MB (—Ç—Ä–µ–±—É–µ—Ç—Å—è –æ—á–∏—Å—Ç–∫–∞!)"
    ISSUES=$((ISSUES + 1))
fi

# 9. –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
if [[ -f "cyberkitty19-transkribator.db" ]]; then
    DB_SIZE=$(du -sm "cyberkitty19-transkribator.db" | cut -f1)
    log "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: ${DB_SIZE}MB"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    if docker-compose exec -T cyberkitty19-transkribator-bot python -c "
from transkribator_modules.db.database import SessionLocal
try:
    db = SessionLocal()
    db.execute('SELECT 1')
    db.close()
    print('OK')
except Exception as e:
    print(f'ERROR: {e}')
    exit(1)
" 2>/dev/null | grep -q "OK"; then
        log "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞"
    else
        error "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
        ISSUES=$((ISSUES + 1))
    fi
else
    warn "–§–∞–π–ª –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω"
    ISSUES=$((ISSUES + 1))
fi

# 10. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –æ—à–∏–±–æ–∫ –≤ –ª–æ–≥–∞—Ö
info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –æ—à–∏–±–æ–∫..."
if docker-compose logs --tail=100 2>/dev/null | grep -i "error\|exception\|failed" | tail -5 | grep -q .; then
    warn "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–µ–¥–∞–≤–Ω–∏–µ –æ—à–∏–±–∫–∏ –≤ –ª–æ–≥–∞—Ö"
    ISSUES=$((ISSUES + 1))
    
    if [[ "$VERBOSE" == "true" ]]; then
        echo "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏:"
        docker-compose logs --tail=100 2>/dev/null | grep -i "error\|exception\|failed" | tail -5
    fi
else
    log "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ –≤ –ª–æ–≥–∞—Ö –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ"
fi

# –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
echo ""
echo "=============================================="
if [[ $ISSUES -eq 0 ]]; then
    log "–í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ! –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ."
    exit 0
elif [[ $ISSUES -le 2 ]]; then
    warn "–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ $ISSUES –ø—Ä–æ–±–ª–µ–º(—ã). –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∫–∞."
    exit 1
else
    error "–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ $ISSUES –ø—Ä–æ–±–ª–µ–º! –¢—Ä–µ–±—É–µ—Ç—Å—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–µ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–æ."
    send_telegram_alert "–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ $ISSUES –ø—Ä–æ–±–ª–µ–º –≤ —Å–∏—Å—Ç–µ–º–µ!"
    exit 2
fi 