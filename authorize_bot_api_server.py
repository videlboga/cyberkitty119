#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram Bot API Server
–°–æ–∑–¥–∞–µ—Ç TDLib —Å–µ—Å—Å–∏—é –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤
"""

import subprocess
import sys
import time
import os

def authorize_bot_api_server():
    """
    –ê–≤—Ç–æ—Ä–∏–∑—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Bot API Server –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤
    """
    
    print("üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Bot API Server")
    print("üì± –≠—Ç–æ—Ç –ø—Ä–æ—Ü–µ—Å—Å —Ç—Ä–µ–±—É–µ—Ç –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ –∫–æ–¥–∞")
    print("=" * 60)
    
    # API –¥–∞–Ω–Ω—ã–µ
    api_id = "29612572"
    api_hash = "fa4d9922f76dea00803d072510ced924"
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    print("üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã...")
    subprocess.run("docker stop $(docker ps -q --filter='name=telegram-bot-api') 2>/dev/null || true", 
                   shell=True, capture_output=True)
    
    # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ
    data_dir = "/home/cyberkitty/Project/transkribator/telegram-bot-api-data-new"
    print(f"üßπ –û—á–∏—â–∞—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–∞–Ω–Ω—ã—Ö: {data_dir}")
    if os.path.exists(data_dir):
        subprocess.run(f"rm -rf {data_dir}/*", shell=True)
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    os.makedirs(data_dir, exist_ok=True)
    
    print("\nüöÄ –ó–∞–ø—É—Å–∫–∞—é Bot API Server –≤ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–º —Ä–µ–∂–∏–º–µ...")
    print("üìû –ü—Ä–∏–≥–æ—Ç–æ–≤—å—Ç–µ—Å—å –≤–≤–µ—Å—Ç–∏:")
    print("   1. –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–≤ —Ñ–æ—Ä–º–∞—Ç–µ +7XXXXXXXXXX)")
    print("   2. –ö–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏–∑ SMS/Telegram")
    print("   3. –ü–∞—Ä–æ–ª—å –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω)")
    print("\n‚ö†Ô∏è  –í–ê–ñ–ù–û: –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
    print("=" * 60)
    
    # –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Bot API Server –≤ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–º —Ä–µ–∂–∏–º–µ
    cmd = [
        "docker", "run", "-it", "--rm",
        "--name", "telegram-bot-api-auth",
        "-p", "8083:8081",
        "-v", f"{data_dir}:/var/lib/telegram-bot-api",
        "-e", f"TELEGRAM_API_ID={api_id}",
        "-e", f"TELEGRAM_API_HASH={api_hash}",
        "aiogram/telegram-bot-api:latest",
        "--local",
        "--dir=/var/lib/telegram-bot-api",
        "--temp-dir=/tmp/telegram-bot-api",
        "--http-port=8081",
        "--verbosity=1"
    ]
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å
        process = subprocess.run(cmd, check=False)
        
        if process.returncode == 0:
            print("\n‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
            print("üîç –ü—Ä–æ–≤–µ—Ä—è—é —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã...")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
            result = subprocess.run(["ls", "-la", data_dir], 
                                  capture_output=True, text=True)
            print(f"üìÅ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ {data_dir}:")
            print(result.stdout)
            
            return True
        else:
            print(f"\n‚ùå –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –∫–æ–¥–æ–º: {process.returncode}")
            return False
            
    except KeyboardInterrupt:
        print("\n\n‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        print("üîç –ü—Ä–æ–≤–µ—Ä—è—é —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        result = subprocess.run(["ls", "-la", data_dir], 
                              capture_output=True, text=True)
        print(f"üìÅ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ {data_dir}:")
        print(result.stdout)
        
        return True
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def start_bot_api_server():
    """
    –ó–∞–ø—É—Å–∫–∞–µ—Ç Bot API Server –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ –ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    """
    
    api_id = "29612572"
    api_hash = "fa4d9922f76dea00803d072510ced924"
    data_dir = "/home/cyberkitty/Project/transkribator/telegram-bot-api-data-new"
    
    print("\nüöÄ –ó–∞–ø—É—Å–∫–∞—é Bot API Server –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ...")
    
    cmd = [
        "docker", "run", "-d",
        "--name", "telegram-bot-api-authorized",
        "-p", "8083:8081",
        "-v", f"{data_dir}:/var/lib/telegram-bot-api",
        "-e", f"TELEGRAM_API_ID={api_id}",
        "-e", f"TELEGRAM_API_HASH={api_hash}",
        "aiogram/telegram-bot-api:latest",
        "--local",
        "--dir=/var/lib/telegram-bot-api",
        "--temp-dir=/tmp/telegram-bot-api",
        "--http-port=8081"
    ]
    
    try:
        result = subprocess.run(cmd, capture_output=True, text=True, check=True)
        print(f"‚úÖ Bot API Server –∑–∞–ø—É—â–µ–Ω: {result.stdout.strip()}")
        
        # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
        time.sleep(3)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
        test_cmd = ["curl", "-s", "http://localhost:8083/bot7907324843:AAEJMec9IeP89y0Taka4k7hbvpjd7F1Frl4/getMe"]
        test_result = subprocess.run(test_cmd, capture_output=True, text=True)
        
        if "first_name" in test_result.stdout:
            print("‚úÖ Bot API Server —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å—ã")
            return True
        else:
            print(f"‚ö†Ô∏è  Bot API Server –∑–∞–ø—É—â–µ–Ω, –Ω–æ —Ç–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª: {test_result.stdout}")
            return False
            
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
        print(f"–í—ã–≤–æ–¥: {e.stdout}")
        print(f"–û—à–∏–±–∫–∏: {e.stderr}")
        return False

if __name__ == "__main__":
    print("üîê CyberKitty Bot API Server Authorization Tool")
    print("=" * 50)
    
    if len(sys.argv) > 1 and sys.argv[1] == "--start-only":
        # –¢–æ–ª—å–∫–æ –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ (–µ—Å–ª–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É–∂–µ –±—ã–ª–∞)
        success = start_bot_api_server()
    else:
        # –ü–æ–ª–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è + –∑–∞–ø—É—Å–∫
        print("1Ô∏è‚É£ –≠—Ç–∞–ø 1: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        auth_success = authorize_bot_api_server()
        
        if auth_success:
            print("\n2Ô∏è‚É£ –≠—Ç–∞–ø 2: –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞")
            success = start_bot_api_server()
        else:
            success = False
    
    if success:
        print("\nüéâ –ì–æ—Ç–æ–≤–æ! Bot API Server –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("üìã –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –±–æ—Ç–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–æ–ª—å—à–∏–º–∏ —Ñ–∞–π–ª–∞–º–∏")
        print("üîó URL: http://localhost:8083")
    else:
        print("\n‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ.")
        sys.exit(1) 