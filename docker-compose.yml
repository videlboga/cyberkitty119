version: '3.8'

services:
  telegram-bot-api:
    build:
      context: .
      dockerfile: Dockerfile.telegram-bot-api
    container_name: cyberkitty19-telegram-bot-api
    ports:
      - "9081:8081"
    environment:
      - TELEGRAM_API_ID=${TELEGRAM_API_ID}
      - TELEGRAM_API_HASH=${TELEGRAM_API_HASH}
    volumes:
      - ./telegram-bot-api-data:/var/lib/telegram-bot-api
    restart: unless-stopped
    networks:
      - cyberkitty19-transkribator-network

  bot:
    build: .
    container_name: cyberkitty19-transkribator-bot
    depends_on:
      - telegram-bot-api
      - postgres
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - DEEPINFRA_API_KEY=${DEEPINFRA_API_KEY}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - OPENROUTER_MODEL=${OPENROUTER_MODEL}
      - EMBEDDING_PROVIDER=${EMBEDDING_PROVIDER}
      - EMBEDDING_MODEL=${EMBEDDING_MODEL}
      - DISABLE_REMOTE_EMBEDDINGS=${DISABLE_REMOTE_EMBEDDINGS}
      - FEATURE_BETA_MODE=${FEATURE_BETA_MODE}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_REDIRECT_URI=${GOOGLE_REDIRECT_URI}
      - GOOGLE_ENCRYPTION_KEY=${GOOGLE_ENCRYPTION_KEY}
      - MINIAPP_DEV_TELEGRAM_ID=${MINIAPP_DEV_TELEGRAM_ID}
      - MINIAPP_DEV_FIRST_NAME=${MINIAPP_DEV_FIRST_NAME}
      - MINIAPP_DEV_LAST_NAME=${MINIAPP_DEV_LAST_NAME}
      - MINIAPP_DEV_USERNAME=${MINIAPP_DEV_USERNAME}
      - MINIAPP_DEV_TIMEZONE=${MINIAPP_DEV_TIMEZONE}
      - TELEGRAM_API_ID=${TELEGRAM_API_ID}
      - TELEGRAM_API_HASH=${TELEGRAM_API_HASH}
      - USE_LOCAL_BOT_API=true
      - LOCAL_BOT_API_URL=http://telegram-bot-api:8081
      - DATABASE_URL=${DATABASE_URL}
    volumes:
      - ./videos:/app/videos
      - ./transcriptions:/app/transcriptions
      - ./audio:/app/audio
      - ./telegram-bot-api-data:/app/telegram-bot-api-data
    restart: unless-stopped
    networks:
      - cyberkitty19-transkribator-network

  worker:
    build: .
    container_name: cyberkitty19-transkribator-worker
    depends_on:
      - postgres
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - JOB_POLL_INTERVAL=${JOB_POLL_INTERVAL:-5}
      - JOB_BACKOFF_MIN=${JOB_BACKOFF_MIN:-5}
      - JOB_BACKOFF_MAX=${JOB_BACKOFF_MAX:-60}
      - JOB_MAX_JOBS=${JOB_MAX_JOBS:-0}
      - JOB_TYPES=${JOB_TYPES}
      - MEDIA_SERVICE_OVERRIDES=${MEDIA_SERVICE_OVERRIDES}
    entrypoint:
      - python
      - job_worker.py
    command:
      - --worker-id
      - ${JOB_WORKER_ID:-worker-default}
      - --poll-interval
      - ${JOB_POLL_INTERVAL:-5}
    restart: unless-stopped
    volumes:
      - ./data:/app/data
    networks:
      - cyberkitty19-transkribator-network

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: cyberkitty19-transkribator-api
    ports:
      - "9000:8000"
    environment:
      - REQUIRE_BOT_TOKEN=false
      - BOT_TOKEN=${BOT_TOKEN}
      - DEEPINFRA_API_KEY=${DEEPINFRA_API_KEY}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - OPENROUTER_MODEL=${OPENROUTER_MODEL}
      - EMBEDDING_PROVIDER=${EMBEDDING_PROVIDER}
      - EMBEDDING_MODEL=${EMBEDDING_MODEL}
      - DISABLE_REMOTE_EMBEDDINGS=${DISABLE_REMOTE_EMBEDDINGS}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_REDIRECT_URI=${GOOGLE_REDIRECT_URI}
      - GOOGLE_ENCRYPTION_KEY=${GOOGLE_ENCRYPTION_KEY}
      - MINIAPP_DEV_TELEGRAM_ID=${MINIAPP_DEV_TELEGRAM_ID}
      - MINIAPP_DEV_FIRST_NAME=${MINIAPP_DEV_FIRST_NAME}
      - MINIAPP_DEV_LAST_NAME=${MINIAPP_DEV_LAST_NAME}
      - MINIAPP_DEV_USERNAME=${MINIAPP_DEV_USERNAME}
      - MINIAPP_DEV_TIMEZONE=${MINIAPP_DEV_TIMEZONE}
      - DATABASE_URL=${DATABASE_URL}
    volumes:
      - ./data:/app/data
      - ./transcriptions:/app/transcriptions
    restart: unless-stopped
    depends_on:
      - postgres
    networks:
      - cyberkitty19-transkribator-network

  postgres:
    build:
      context: .
      dockerfile: Dockerfile.postgres
    container_name: cyberkitty19-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - transkribator_postgres-data:/var/lib/postgresql/data
    ports:
      - "55432:5432"
    networks:
      - cyberkitty19-transkribator-network

networks:
  cyberkitty19-transkribator-network:
    driver: bridge

volumes:
  telegram-bot-api-data:
  videos:
  audio:
  transcriptions:
  transkribator_postgres-data:
    external: true
