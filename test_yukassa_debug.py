#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –Æ–ö–∞—Å—Å–æ–π
"""

import sys
import os
sys.path.append('/root/transkribator')

from transkribator_modules.config import logger, YUKASSA_SHOP_ID, YUKASSA_SECRET_KEY, YUKASSA_DEFAULT_EMAIL, YUKASSA_VAT_CODE, YUKASSA_TAX_SYSTEM_CODE
from transkribator_modules.payments.yukassa import YukassaPaymentService

def test_yukassa_config():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –Æ–ö–∞—Å—Å—ã"""
    print("üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Æ–ö–∞—Å—Å—ã:")
    print(f"  Shop ID: {YUKASSA_SHOP_ID}")
    print(f"  Secret Key: {YUKASSA_SECRET_KEY[:20]}..." if YUKASSA_SECRET_KEY else "  Secret Key: –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù")
    print(f"  Default Email: {YUKASSA_DEFAULT_EMAIL}")
    print(f"  VAT Code: {YUKASSA_VAT_CODE}")
    print(f"  Tax System Code: {YUKASSA_TAX_SYSTEM_CODE}")
    print()

def test_yukassa_service_init():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é —Å–µ—Ä–≤–∏—Å–∞ –Æ–ö–∞—Å—Å—ã"""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–µ—Ä–≤–∏—Å–∞ –Æ–ö–∞—Å—Å—ã:")
    try:
        service = YukassaPaymentService()
        print("  ‚úÖ –°–µ—Ä–≤–∏—Å –Æ–ö–∞—Å—Å—ã —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        return service
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {e}")
        return None

def test_payment_creation(service):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞"""
    if not service:
        print("‚ùå –°–µ—Ä–≤–∏—Å –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞")
        return

    print("üí≥ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞:")
    try:
        # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        user_id = 12345
        plan_type = "pro"
        amount = 299.0
        description = "–¢–µ—Å—Ç–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂"

        print(f"  –°–æ–∑–¥–∞–µ–º –ø–ª–∞—Ç–µ–∂:")
        print(f"    User ID: {user_id}")
        print(f"    Plan: {plan_type}")
        print(f"    Amount: {amount} RUB")
        print(f"    Description: {description}")

        payment_result = service.create_payment(
            user_id=user_id,
            plan_type=plan_type,
            amount=amount,
            description=description
        )

        print("  ‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω:")
        print(f"    Payment ID: {payment_result['payment_id']}")
        print(f"    Status: {payment_result['status']}")
        print(f"    Confirmation URL: {payment_result['confirmation_url']}")

    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞: {e}")
        import traceback
        traceback.print_exc()

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üè¶ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –Æ–ö–∞—Å—Å–æ–π")
    print("=" * 50)

    # –¢–µ—Å—Ç 1: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
    test_yukassa_config()

    # –¢–µ—Å—Ç 2: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞
    service = test_yukassa_service_init()

    # –¢–µ—Å—Ç 3: –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞
    test_payment_creation(service)

    print("=" * 50)
    print("üèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

if __name__ == "__main__":
    main()


